# Default values for warp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Number of warp client instances
replicaCount: 4

image:
  repository: minio/warp
  pullPolicy: IfNotPresent
  # Set version to use a specific release of Warp
  # version: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

warpConfiguration:
  # MinIO or other S3 Compatible server URL
  s3ServerURL: minio-{0...3}.minio.default.svc.cluster.local:9000
  # Whether TLS enabled or not for above URL
  s3ServerTLSEnabled: false
  # Region for S3 Server
  s3ServerRegion: "us-east-1"
  # MinIO or other S3 Compatible server Access Key
  s3AccessKey: "minio"
  # MinIO or other S3 Compatible server Secret Key
  s3SecretKey: "minio123"
  # Operation to be benchmarked (get / put / delete / list / stat / mixed)
  operationToBenchmark: get

warpJobArgs: {}
  # Full args can be found: https://github.com/minio/warp#usage
  #
  # Number of objects to be used
  # objects: 1000
  #
  # Object size to be used for benchmarks
  # obj.size: 10MiB
  #
  # Duration for which the benchmark will run
  # duration: 5m0s
  #
  # Number of parallel operations to run during benchmark
  # concurrent: 10
  #
  # By default operations are performed on a bucket called warp-benchmark-bucket.
  # This can be changed using the --bucket parameter. Do however note that the bucket
  # will be completely cleaned before and after each run, so it should not contain any data.
  # bucket: "warp-benchmark-bucket"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # name:

securityContext:
  readOnlyRootFilesystem: true

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

service:
  port: 7761

serverResources: {}
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

clientResources: {}
  # limits:
  #   cpu: 4
  #   memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
